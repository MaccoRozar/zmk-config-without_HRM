/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        HRM_custom: HRM_custom {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_C";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I   |  O   | P |
            // |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K   |  L   | ; | 
            // |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   | CTRL | META | . |
            //             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |

            display-name = "Base";
            bindings = <
  &kp Q  &kp W  &kp E      &kp R            &kp T         &kp Y        &kp U      &kp I      &kp O    &kp P
  &kp A  &kp S  &kp E      &kp F            &kp G         &kp H        &kp J      &kp K      &kp L    &kp SEMICOLON
  &kp Z  &kp X  &kp C      &kp V            &kp B         &kp N        &kp M      &kp COMMA  &kp DOT  &kp SLASH
                &kp LCTRL  &bhm LSHIFT ESC  &lt 1 BSPC    &lt 1 SPACE  &lt 2 RET  &mo 2
            >;
        };

        nav_layer {
            bindings = <
  &kp TAB   &kp HOME           &kp UP      &kp END          &kp PAGE_UP      &kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans
  &kp CAPS  &kp LEFT           &kp DOWN    &kp RIGHT        &kp PAGE_DOWN    &kp KP_SUBTRACT  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0
  &mo 4     &kp K_VOLUME_DOWN  &kp K_MUTE  &kp K_VOLUME_UP  &kp LS(TAB)      &kp KP_COMMA     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT
                               &trans      &trans           &kp DELETE       &trans           &trans           &trans
            >;
        };

        symbols_layer {
            bindings = <
  &kp CARET  &kp LESS_THAN         &kp GREATER_THAN       &kp DOLLAR       &kp PERCENT      &kp AT    &kp AMPS             &kp STAR      &kp LS(APOSTROPHE)  &kp GRAVE
  &kp LBRC   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp EQUAL        &kp BSLH  &kp PLUS             &kp MINUS     &kp FSLH            &kp DQT
  &kp TILDE  &kp LBKT              &kp RBKT               &kp UNDER        &kp LS(POUND)    &kp PIPE  &kp LS(EXCLAMATION)  &kp LS(SEMI)  &kp LS(COLON)       &kp LS(QMARK)
                                   &trans                 &trans           &trans           &trans    &trans               &trans
            >;
        };

        Function_layer {
            bindings = <
  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &trans  &trans  &trans  &trans
  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans  &trans  &trans  &trans  &trans
  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &trans  &trans  &trans  &trans
                   &trans   &trans   &trans    &trans  &trans  &trans
            >;
        };

        what_layer {
            // -----------------------------------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
            // | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
            // |     |     |     |     |     |   |     |     |     |     |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans
  &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans
                              &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        shift {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I   |  O   | P |
            // |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K   |  L   | ; | 
            // |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   | CTRL | META | . |
            //             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |

            display-name = "Base";
            bindings = <
  &kp LS(Q)  &kp LS(W)  &kp LS(E)      &kp LS(R)        &kp LS(T)     &kp LS(Y)    &kp LS(U)  &kp LS(I)      &kp LS(O)    &kp LS(P)
  &kp LS(A)  &kp LS(S)  &kp LS(LCTRL)  &kp LS(F)        &kp LS(G)     &kp LS(H)    &kp LS(J)  &kp LS(K)      &kp LS(L)    &kp LS(SEMICOLON)
  &kp LS(Z)  &kp LS(X)  &kp LS(C)      &kp LS(V)        &kp LS(B)     &kp LS(N)    &kp LS(M)  &kp LS(COMMA)  &kp LS(DOT)  &kp LS(SLASH)
                        &kp LCTRL      &bhm LSHIFT ESC  &lt 1 BSPC    &lt 1 SPACE  &lt 2 RET  &mo 2
            >;
        };
    };
};
